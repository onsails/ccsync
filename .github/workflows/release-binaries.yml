name: Release Binaries

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag without ccsync- prefix (e.g., v0.1.3 for release ccsync-v0.1.3)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  upload-binaries:
    name: Build and upload binaries
    # Build binaries for all releases (workspace uses single version)
    if: github.repository_owner == 'onsails'
    strategy:
      matrix:
        include:
          # Linux
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest

          # macOS
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

          # Windows
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Upload binary to release
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ccsync
          manifest-path: crates/ccsync/Cargo.toml
          target: ${{ matrix.target }}
          # Note: The action requires at least one archive format
          # tar: unix, zip: windows is the minimal setup
          tar: unix
          zip: windows
          ref: ${{ github.event.inputs.tag && format('refs/tags/ccsync-{0}', github.event.inputs.tag) || '' }}
          token: ${{ secrets.GITHUB_TOKEN }}
